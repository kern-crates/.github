name: Check, Build and Test

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain: [stable, nightly]
        targets: [x86_64-unknown-linux-gnu, x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none-softfloat]
    steps:
    - uses: actions/checkout@v4
    - uses: taiki-e/install-action@v2
      with:
        # Add more tools that can be installed from their github release assets (via cargo-binstall)
        tool: cargo-hack,cargo-binutils
    - uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, clippy, rustfmt
        targets: ${{ matrix.targets }}
    - name: Check rust version
      run: rustc --version --verbose
    - name: Check code format
      run: cargo fmt --all -- --check
    - name: Clippy
      run: cargo hack clippy --target ${{ matrix.targets }} --each-feature -- -D warnings
    - name: Build
      run: cargo hack build --target ${{ matrix.targets }} --each-feature
    - name: Unit test
      if: ${{ matrix.targets == 'x86_64-unknown-linux-gnu' }}
      run: cargo hack test --target ${{ matrix.targets }} --each-feature -- --nocapture
